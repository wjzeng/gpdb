-- start_matchsubs
-- m/nodeModifyTable.c:\d+/
-- s/nodeModifyTable.c:\d+/nodeModifyTable.c:XXX/
-- end_matchsubs

-- start_ignore
drop table tab1;
ERROR:  table "tab1" does not exist
drop table tab2;
ERROR:  table "tab2" does not exist
drop table tab3;
ERROR:  table "tab3" does not exist
-- end_ignore

-- We do some check to verify the tuple to delete|update
-- is from the segment it scans out. This case is to test
-- such check.
-- We build a plan that will add motion above result relation,
-- however, does not contain explicit motion to send tuples back,
-- and then login in segment using utility mode to insert some
-- bad data.

create table tab1(a int, b int) distributed by (b);
CREATE
create table tab2(a int, b int) distributed by (a);
CREATE
create table tab3 (a int, b int) distributed by (b);
CREATE

insert into tab1 values (1, 1);
INSERT 1
insert into tab2 values (1, 1);
INSERT 1
insert into tab3 values (1, 1);
INSERT 1

set allow_system_table_mods='dml';
SET
update pg_class set relpages = 10000 where relname='tab2';
UPDATE 1
update pg_class set reltuples = 100000000 where relname='tab2';
UPDATE 1
update pg_class set relpages = 100000000 where relname='tab3';
UPDATE 1
update pg_class set reltuples = 100000 where relname='tab3';
UPDATE 1

select dbid, content from gp_segment_configuration;
dbid|content
----+-------
1   |-1     
2   |0      
3   |1      
4   |2      
5   |0      
6   |1      
7   |2      
8   |-1     
(8 rows)
-- 5x's islation2 framework use dbid to specify utility target
-- 3 should be the seg1 for demo cluster with mirrors
3U: insert into tab1 values (1, 1);
INSERT 1

select gp_segment_id, * from tab1;
gp_segment_id|a|b
-------------+-+-
0            |1|1
1            |1|1
(2 rows)

-- planner does not error out because it will add explicit motion
-- For orca, this will error out
explain delete from tab1 using tab2, tab3 where tab1.a = tab2.a and tab1.b = tab3.a;
QUERY PLAN                                                                                                                 
---------------------------------------------------------------------------------------------------------------------------
Delete (slice0; segments: 3)  (rows=9 width=10)                                                                            
  ->  Explicit Redistribute Motion 3:3  (slice3; segments: 3)  (cost=1260003.37..101261253.84 rows=9 width=10)             
        ->  Hash Join  (cost=1260003.37..101261253.84 rows=9 width=10)                                                     
              Hash Cond: tab3.a = tab1.b                                                                                   
              ->  Seq Scan on tab3  (cost=0.00..100001000.00 rows=33334 width=4)                                           
              ->  Hash  (cost=1260002.37..1260002.37 rows=27 width=14)                                                     
                    ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=1.04..1260002.37 rows=27 width=14)              
                          ->  Hash Join  (cost=1.04..1260001.31 rows=9 width=14)                                           
                                Hash Cond: tab2.a = tab1.a                                                                 
                                ->  Seq Scan on tab2  (cost=0.00..1010000.00 rows=33333334 width=4)                        
                                ->  Hash  (cost=1.03..1.03 rows=1 width=18)                                                
                                      ->  Redistribute Motion 3:3  (slice1; segments: 3)  (cost=0.00..1.03 rows=1 width=18)
                                            Hash Key: tab1.a                                                               
                                            ->  Seq Scan on tab1  (cost=0.00..1.01 rows=1 width=18)                        
Settings:  optimizer=off                                                                                                   
Optimizer status: legacy query optimizer                                                                                   
(16 rows)
begin;
BEGIN
delete from tab1 using tab2, tab3 where tab1.a = tab2.a and tab1.b = tab3.a;
DELETE 2
abort;
ABORT

-- For orca, this will error out
explain update tab1 set a = 999 from tab2, tab3 where tab1.a = tab2.a and tab1.b = tab3.a;
QUERY PLAN                                                                                                                 
---------------------------------------------------------------------------------------------------------------------------
Update (slice0; segments: 3)  (rows=9 width=14)                                                                            
  ->  Explicit Redistribute Motion 3:3  (slice3; segments: 3)  (cost=1260003.37..101261253.84 rows=9 width=14)             
        ->  Hash Join  (cost=1260003.37..101261253.84 rows=9 width=14)                                                     
              Hash Cond: tab3.a = tab1.b                                                                                   
              ->  Seq Scan on tab3  (cost=0.00..100001000.00 rows=33334 width=4)                                           
              ->  Hash  (cost=1260002.37..1260002.37 rows=27 width=14)                                                     
                    ->  Broadcast Motion 3:3  (slice2; segments: 3)  (cost=1.04..1260002.37 rows=27 width=14)              
                          ->  Hash Join  (cost=1.04..1260001.31 rows=9 width=14)                                           
                                Hash Cond: tab2.a = tab1.a                                                                 
                                ->  Seq Scan on tab2  (cost=0.00..1010000.00 rows=33333334 width=4)                        
                                ->  Hash  (cost=1.03..1.03 rows=1 width=18)                                                
                                      ->  Redistribute Motion 3:3  (slice1; segments: 3)  (cost=0.00..1.03 rows=1 width=18)
                                            Hash Key: tab1.a                                                               
                                            ->  Seq Scan on tab1  (cost=0.00..1.01 rows=1 width=18)                        
Settings:  optimizer=off                                                                                                   
Optimizer status: legacy query optimizer                                                                                   
(16 rows)
begin;
BEGIN
update tab1 set a = 999 from tab2, tab3 where tab1.a = tab2.a and tab1.b = tab3.a;
UPDATE 2
abort;
ABORT

-- Test splitupdate, 5x planner does not support splitupdate
-- if orca enabled, the following split update will error out
explain update tab1 set b = 999;
ERROR:  Cannot parallelize an UPDATE statement that updates the distribution columns
begin;
BEGIN
update tab1 set b = 999;
ERROR:  Cannot parallelize an UPDATE statement that updates the distribution columns
abort;
ABORT

-- drop table tab1;
-- drop table tab2;
-- drop table tab3;
