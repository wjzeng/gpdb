#!/usr/bin/make -f

# see EXAMPLES in dpkg-buildflags(1) and read /usr/share/dpkg/*
DH_VERBOSE = 1
DPKG_EXPORT_BUILDFLAGS = 1

GPDB_SRC_DIR := /tmp/gpdb_src
VERSION := $(shell cat $(GPDB_SRC_DIR)/VERSION | awk '{print $$1}')
PACKAGE := $(shell cat debian/control | egrep "^Package: " | cut -d " " -f 2)

# This destination should NOT be debian/tmp, where certain packaging info stored and erased via dh_prep
DEBIAN_DESTINATION := $(shell pwd)/debian/build

include /usr/share/dpkg/default.mk

%:
	dh $@ --parallel

override_dh_auto_configure:
	echo "Skipping configure"

override_dh_auto_install:
	mkdir -p ${DEBIAN_DESTINATION}
	cp -r /usr/local/greenplum-db-devel/* ${DEBIAN_DESTINATION}
	sed -i "s#GPHOME=.*#GPHOME=/opt/gpdb#g" ${DEBIAN_DESTINATION}/greenplum_path.sh
	# Remove fault injector and other packages
	while read file; do\
      if [ -f "${DEBIAN_DESTINATION}/$${file}" ]; then\
        echo "Deleting: ${DEBIAN_DESTINATION}/$${file}"; \
        rm "${DEBIAN_DESTINATION}/$${file}"; \
      else\
        echo "File $${file} does not exist. Skipping." ; \
      fi;\
    done < ${GPDB_SRC_DIR}/gpAux/releng/NON_PRODUCTION_FILES.txt

override_dh_auto_build:
	echo "Skipping build"

override_dh_auto_clean:
	echo "Skipping clean"

override_dh_gencontrol:
	echo "using version $(VERSION) for binary"
	dpkg-gencontrol -v$(VERSION) -Pdebian/$(PACKAGE)

override_dh_shlibdeps:
	LD_LIBRARY_PATH=${DEBIAN_DESTINATION}/lib dh_shlibdeps --dpkg-shlibdeps-params=--ignore-missing-info > /tmp/dp_shlibdeps.out.txt 2>&1 || echo "Error with dp_shlibsdeps, output: $(cat /tmp/dp_shlibdeps.out.txt)"

clean_dev_local:
	rm -rf ${DEBIAN_DESTINATION}
